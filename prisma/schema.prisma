// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Waitlist {
  id       String   @id @default(cuid())
  email    String   @unique
  joinedAt DateTime @default(now())
}

model Player {
  id           String     @id // Using String because playerID is a string in the API
  name         String
  lastUpdated  DateTime   @default(now()) // Track when stats were last updated
  gameStats    GameStat[]
  projectionNames ProjectionName[]
}

model GameStat {
  id            Int      @id @default(autoincrement())
  gameId        String   // e.g. "20240429_LAL@DEN"
  date          String   // Extracted from gameId
  team          String   // e.g. "LAL"
  teamId        String   // e.g. "14"
  minutes       Int
  points        Int
  rebounds      Int
  offRebounds   Int
  defRebounds   Int
  assists       Int
  steals       Int
  blocks       Int
  turnovers    Int
  personalFouls Int
  technicals   Int
  
  // Detailed shooting stats
  fgMade       Int
  fgAttempted  Int
  fgPercentage Float
  threePtMade  Int
  threePtAttempted Int
  threePtPercentage Float
  ftMade       Int
  ftAttempted  Int
  ftPercentage Float
  
  // Combined stats (for compatibility)
  fg          String    // e.g. "9/20"
  threePt     String    // e.g. "1/6"
  ft          String    // e.g. "9/10"
  
  plusMinus    String
  fantasyPoints Float
  
  // Foreign key relationship to Player
  playerId     String
  player       Player   @relation(fields: [playerId], references: [id])

  @@index([playerId])
  @@index([gameId])
}

model Team {
  id            String     @id // Using teamID from the API
  name          String     // Full team name
  abbreviation  String     // Team abbreviation
  city          String
  conference    String
  division      String
  lastUpdated   DateTime   @default(now())
  teamStats     TeamStat[]
}

model TeamStat {
  id              Int      @id @default(autoincrement())
  date            String
  wins            Int
  losses          Int
  pointsPerGame   Float
  oppPointsPerGame Float
  
  // Offensive stats
  fieldGoalsMade     Int
  fieldGoalsAttempted Int
  fieldGoalPercentage Float
  threePtMade        Int
  threePtAttempted   Int
  threePtPercentage  Float
  freeThrowsMade     Int
  freeThrowsAttempted Int
  freeThrowPercentage Float
  offensiveRebounds  Int
  assists            Int
  turnovers          Int
  
  // Defensive stats
  defensiveRebounds  Int
  steals             Int
  blocks             Int
  personalFouls      Int
  
  // Additional stats
  fastBreakPoints    Int
  pointsInPaint      Int
  pointsOffTurnovers Int
  
  // Foreign key relationship to Team
  teamId     String
  team       Team   @relation(fields: [teamId], references: [id])

  @@unique([teamId, date])
  @@index([teamId])
  @@index([date])
}

model ProjectionName {
  id            String           @id @default(cuid())
  playerId      String          @unique
  displayName   String          // Player's display name
  player        Player          @relation(fields: [playerId], references: [id])
  projections   ProjectionData[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  @@index([playerId])
}

model ProjectionData {
  id              String         @id // Using the API's projection ID
  projectionNameId String        // Reference to ProjectionName
  projectionName   ProjectionName @relation(fields: [projectionNameId], references: [id])
  gameId          String         // Game identifier
  statType        String         // Type of stat being projected
  lineScore       Float         // The projected line score
  startTime       DateTime      // When the game starts
  endTime         DateTime?     // When the game ends (nullable)
  status          String        // Game status (pre_game, in_progress, final)
  odds            Float?        // Adjusted odds if available
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@index([projectionNameId])
  @@index([gameId])
}
